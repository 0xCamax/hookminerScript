import 'https://deno.land/std@0.224.0/dotenv/load.ts';
import { bytes, address } from './types.ts';
import { HookMiner } from './HookMiner.ts';
import { HookFlag } from './constants.ts';
import { encodeFlags } from './utils.ts';
import { AbiCoder } from 'npm:ethers';

async function main() {
	const flags = encodeFlags([
		HookFlag.BEFORE_INITIALIZE,
        HookFlag.BEFORE_ADD_LIQUIDITY
	]);
	const saltStart = 0;
	const creationCode: bytes = '0x608060405234801561000f575f80fd5b50610b098061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610034575f3560e01c8063259982e514610038578063dc98354e14610068575b5f80fd5b610052600480360381019061004d91906103dc565b610098565b60405161005f919061049c565b60405180910390f35b610082600480360381019061007d9190610662565b6101b7565b60405161008f919061049c565b60405180910390f35b5f805f81819054906101000a900467ffffffffffffffff16809291906100bd906106f2565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550507f4bc6671fc24baf7643e552683a434d7073162faaa073ac4064801b4adc1d07755f8054906101000a900467ffffffffffffffff166040516101269190610730565b60405180910390a17f98151a93866e6a6daf019f7e60f85cf0ea5c4d958bc638911c9a958eff70f29086868686866040516101659594939291906109c2565b60405180910390a17fd6558c3ed910d959271054471fd1c326679d9fece99c5091b00ed89627cf2bfc3360405161019c9190610a10565b60405180910390a163259982e560e01b905095945050505050565b5f805f81819054906101000a900467ffffffffffffffff16809291906101dc906106f2565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550507f4bc6671fc24baf7643e552683a434d7073162faaa073ac4064801b4adc1d07755f8054906101000a900467ffffffffffffffff166040516102459190610730565b60405180910390a17f0981ec7bb94de0f6a3898b34c3b7e952b176fa9474e41c6e5c659c9d514d5df584848460405161028093929190610a9e565b60405180910390a17fd6558c3ed910d959271054471fd1c326679d9fece99c5091b00ed89627cf2bfc336040516102b79190610a10565b60405180910390a163dc98354e60e01b90509392505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61030a826102e1565b9050919050565b61031a81610300565b8114610324575f80fd5b50565b5f8135905061033581610311565b92915050565b5f80fd5b5f60a082840312156103545761035361033b565b5b81905092915050565b5f608082840312156103725761037161033b565b5b81905092915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261039c5761039b61037b565b5b8235905067ffffffffffffffff8111156103b9576103b861037f565b5b6020830191508360018202830111156103d5576103d4610383565b5b9250929050565b5f805f805f61016086880312156103f6576103f56102d9565b5b5f61040388828901610327565b95505060206104148882890161033f565b94505060c06104258882890161035d565b93505061014086013567ffffffffffffffff811115610447576104466102dd565b5b61045388828901610387565b92509250509295509295909350565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61049681610462565b82525050565b5f6020820190506104af5f83018461048d565b92915050565b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6104ff826104b9565b810181811067ffffffffffffffff8211171561051e5761051d6104c9565b5b80604052505050565b5f6105306102d0565b905061053c82826104f6565b919050565b5f62ffffff82169050919050565b61055881610541565b8114610562575f80fd5b50565b5f813590506105738161054f565b92915050565b5f8160020b9050919050565b61058e81610579565b8114610598575f80fd5b50565b5f813590506105a981610585565b92915050565b5f60a082840312156105c4576105c36104b5565b5b6105ce60a0610527565b90505f6105dd84828501610327565b5f8301525060206105f084828501610327565b602083015250604061060484828501610565565b60408301525060606106188482850161059b565b606083015250608061062c84828501610327565b60808301525092915050565b610641816102e1565b811461064b575f80fd5b50565b5f8135905061065c81610638565b92915050565b5f805f60e08486031215610679576106786102d9565b5b5f61068686828701610327565b9350506020610697868287016105af565b92505060c06106a88682870161064e565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f67ffffffffffffffff82169050919050565b5f6106fc826106df565b915067ffffffffffffffff8203610716576107156106b2565b5b600182019050919050565b61072a816106df565b82525050565b5f6020820190506107435f830184610721565b92915050565b61075281610300565b82525050565b5f6107666020840184610327565b905092915050565b61077781610300565b82525050565b5f61078b6020840184610565565b905092915050565b61079c81610541565b82525050565b5f6107b0602084018461059b565b905092915050565b6107c181610579565b82525050565b60a082016107d75f830183610758565b6107e35f85018261076e565b506107f16020830183610758565b6107fe602085018261076e565b5061080c604083018361077d565b6108196040850182610793565b5061082760608301836107a2565b61083460608501826107b8565b506108426080830183610758565b61084f608085018261076e565b50505050565b5f819050919050565b61086781610855565b8114610871575f80fd5b50565b5f813590506108828161085e565b92915050565b5f6108966020840184610874565b905092915050565b6108a781610855565b82525050565b5f819050919050565b6108bf816108ad565b81146108c9575f80fd5b50565b5f813590506108da816108b6565b92915050565b5f6108ee60208401846108cc565b905092915050565b6108ff816108ad565b82525050565b608082016109155f8301836107a2565b6109215f8501826107b8565b5061092f60208301836107a2565b61093c60208501826107b8565b5061094a6040830183610888565b610957604085018261089e565b5061096560608301836108e0565b61097260608501826108f6565b50505050565b5f82825260208201905092915050565b828183375f83830152505050565b5f6109a18385610978565b93506109ae838584610988565b6109b7836104b9565b840190509392505050565b5f610160820190506109d65f830188610749565b6109e360208301876107c7565b6109f060c0830186610905565b818103610140830152610a04818486610996565b90509695505050505050565b5f602082019050610a235f830184610749565b92915050565b60a082015f820151610a3d5f85018261076e565b506020820151610a50602085018261076e565b506040820151610a636040850182610793565b506060820151610a7660608501826107b8565b506080820151610a89608085018261076e565b50505050565b610a98816102e1565b82525050565b5f60e082019050610ab15f830186610749565b610abe6020830185610a29565b610acb60c0830184610a8f565b94935050505056fea2646970667358221220e12eb01445282f5c1c95d753ee77178a1850b9df2613fc78cb30b68a6dd5750664736f6c63430008180033';
    const hasCostructorArgs = false;
	const constructorArgs: bytes | undefined = new AbiCoder().encode(["bytes"], ["0x"]) as bytes
    const deployerAddress: address = '0xEae7503A905653A642F706F8f2503091d6ef8132';
	const rpcUrl = Deno.env.get('API');

	if (!rpcUrl) {
		console.error('Falta variable de entorno API.');
		Deno.exit(1);
	}

	await HookMiner.find(
		deployerAddress,
		flags,
		creationCode,
		hasCostructorArgs ? constructorArgs : undefined,
		saltStart
	);
}

if (import.meta.main) {
	main().catch((err) => {
		console.error('Error en ejecuci√≥n:', err.message);
		Deno.exit(1);
	});
}
